# In this language, everything is global
# namespace. Even function declarations.

@ foo (a) {

	# Defining a function within a function
	# will actually make it globally available

	"foo"

	[ a ] {
		# But only if the code is executed
		@ bar () {
			"bar"
		}
	} ~ {
		# If a function is defined again, it is
		# overwritten
                @ bar () {
                        "not bar"
                }
	}
}

# Will print:
# foo
# not bar
foo(0)
bar()

# Will print:
# foo
# bar
foo(1)
bar()

